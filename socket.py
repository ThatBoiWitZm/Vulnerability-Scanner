import socket
import argparse

def scan_ports(target, start_port, end_port):
    open_ports = []
    for port in range(start_port, end_port + 1):
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(1)  # Set a timeout to speed up the scanning process
        result = sock.connect_ex((target, port))
        if result == 0:
            open_ports.append(port)
        sock.close()
    return open_ports

def main():
    parser = argparse.ArgumentParser(description="Simple Vulnerability Scanner")
    parser.add_argument("--target", help="Target IP address or hostname", required=True)
    parser.add_argument("--start-port", help="Start port for scanning", type=int, default=1)
    parser.add_argument("--end-port", help="End port for scanning", type=int, default=1024)
    args = parser.parse_args()

    target = args.target
    start_port = args.start_port
    end_port = args.end_port

    print(f"Scanning ports {start_port}-{end_port} on {target}...\n")

    open_ports = scan_ports(target, start_port, end_port)

    if open_ports:
        print("Open ports:")
        for port in open_ports:
            print(f" - Port {port} is open")
    else:
        print("No open ports found.")

if __name__ == "__main__":
    main()
